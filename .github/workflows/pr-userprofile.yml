name: User Profile CI

on: 
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/userprofile-ci.yml
      - apis/userprofile/**
  push:
    branches:
      - main
    #   - features/*
    # paths:
    #   - .github/workflows/userprofile-ci.yml
    #   - apis/userprofile/**

jobs:
  build_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apis/userprofile

    steps:
      - uses: actions/checkout@v3.5.0
        name: Checkout code

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 12

      - run: npm ci
        name: Install packages

      - run: npm run test
        id: node-tests
        name: Tests

      - name: "Publish Test Results"
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test results
          path: "${{ env.WORKDIR }}/reports/userprofile-report.xml"
          reporter: jest-junit

      - name: "Create an issue (bug)"
        if: failure() && github.event_name != 'pull_request' && steps.node-tests.outcome != 'success' }}
        run: |
          body='### Unit Test `failure`
          <details>
          <summary>Workflow details</summary>

          Workflow name: `${{ github.workflow }}`
          Action: `${{ github.event_name }}`
          Job: `${{ github.job }}`
          </details>

          Test details: [Run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          Pusher: @${{ github.actor }}'

          title='Unit Tests failure'
          gh issue create --title "${title}" --body "${body}" --label bug --assignee ${{ github.actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Add comment to PR
        if: failure() && github.event_name == 'pull_request' && steps.node-tests.outcome != 'success' }}
        uses: actions/github-script@v6
        with:
          script: |
            const body = `### Unit Test failure ‚ùå
            <details>
            <summary>Workflow details</summary>

            Workflow name: ${{ github.workflow }}
            Action: ${{ github.event_name }}
            Job: ${{ github.job }}
            PR: #${{ github.event.number }}
            </details>

            Test details: [Run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            Pusher: @${{ github.actor }}
            `;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })