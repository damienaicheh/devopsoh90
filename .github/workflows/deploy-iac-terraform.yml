name: Deploy Terraform

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - iac/terraform/**
      - .github/workflows/pr-iac-terraform.yml

env:
  RESOURCES_PREFIX: devopsoh90
  ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"

defaults:
  run:
    working-directory: iac/terraform

jobs:
  preview:
    runs-on: ubuntu-latest
    outputs:
      TFPLAN_EXITCODE: ${{ steps.tfplan.outputs.exitcode }}

    steps:

    - uses: actions/checkout@v3.5.0
      name: Checkout code

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        terraform init -backend-config=storage_account_name="${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }}" -backend-config=container_name="${{ secrets.TFSTATE_STORAGE_CONTAINER_NAME }}" -backend-config=key="${{ secrets.TFSTATE_KEY }}" -backend-config=resource_group_name="${{ secrets.TFSTATE_RESOURCES_GROUP_NAME }}"

    - name: Terraform Plan
      id: tfplan
      run: |
          terraform plan --detailed-exitcode -var="location=${{ secrets.LOCATION }}" -var="resources_prefix=${RESOURCES_PREFIX}" || exit 0

  deploy:
    runs-on: ubuntu-latest
    needs: preview
    if: needs.preview.outputs.TFPLAN_EXITCODE == 2
    environment: production
    steps:

    - uses: actions/checkout@v3.5.0
      name: Checkout code
    
    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        terraform init -backend-config=storage_account_name="${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }}" -backend-config=container_name="${{ secrets.TFSTATE_STORAGE_CONTAINER_NAME }}" -backend-config=key="${{ secrets.TFSTATE_KEY }}" -backend-config=resource_group_name="${{ secrets.TFSTATE_RESOURCES_GROUP_NAME }}"

    - name: Terraform Apply
      run: |
         terraform apply --auto-approve -var="location=${{ secrets.LOCATION }}" -var="resources_prefix=${RESOURCES_PREFIX}"
